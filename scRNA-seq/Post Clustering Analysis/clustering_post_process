# check individual Seurat clusters for potential doublet clusters

VlnPlot(df120, features="nFeature_RNA", split.by="seurat_clusters")
VlnPlot(df120, features="nCount_RNA", split.by="seurat_clusters")
VlnPlot(df120, features=“percent.mt”, split.by="seurat_clusters")

# generate new df excluding putative doublet cluster 3
# cluster 3 co-expresses Meox1 and Sox2 confirming doublet identity

df120 <- subset(df120, idents= c("0","1","2","4","5","6","7"))

DimPlot(df120, label=T)

# Subset cluster4 and sub-cluster

df120.c4 <- subset(df120, idents = 4)
df120.c4 <- FindNeighbors(df120.c4, dims = 1:10, k.param = 5)
df120.c4 <- FindClusters(df120.c4, resolution=0.05)
DimPlot(df120.c4)

# Generate a new column called sub_cluster in the metadata
df120$sub_cluster <- as.character(Idents(df120))

# Change the information of cells containing sub-cluster information
df120$sub_cluster[rownames(df120.c4@meta.data)] <- paste("c4",Idents(df120.c4))

DimPlot(df120, group.by = "sub_cluster")

## gastruloid 96h

## recluster 96h with removal of low mito cluster

# calculate percent.ribo

rb.genes <- rownames(df96)[grep("^Rp[sl]",rownames(df96))]
C<-GetAssayData(object = df96, slot = "counts")
percent.ribo <- colSums(C[rb.genes,])/Matrix::colSums(C)*100
df96 <- AddMetaData(df96, percent.ribo, col.name = "percent.ribo")

# check feats
Feats <- c(“nCount_RNA”, “nFeature_RNA”, “percent.mt”, “percent.ribo”)
VlnPlot(df96, feats, ncol=2)

# remove cluster 4 because of low mito & high ribo fraction

df96 <- subset(df96, idents = c(“0”,”1”, “2”, “3”))

# generate violin plots of feats for filtered dataset

VlnPlot(df96, feats, ncol=2)

# reclustering and cell cycle check

df96 <- ScaleData(df96_sub, vars.to.regress = c('S.Score', 'G2M.Score'), features = rownames(df96))
df96 <- FindVariableFeatures(df96_sub, verbose = FALSE)
df96 <- RunPCA(df96_sub, features = VariableFeatures(df96_sub), nfeatures.print = 10)
df96 <- FindNeighbors(df96_sub, dims = 1:10)
df96 <- RunUMAP(object = df96_sub, dims = 1:30, n.neighbors=10)
df96 <- FindClusters(df96_sub, resolution = 0.3)
DimPlot(df96, group.by="Phase")

## gastruloid 72h

# cell type identified by scmap in Python 
# see Methods Villaronga Luque, Savill et al. 2023 BioRxiv

# find top20 marker genes for each cell type mapped using in vivo reference

Idents(df72) <- "celltype"

markers <- FindAllMarkers(df72, pseudocount.use=0.1, only.pos=T)
Top20 <- markers %>% group_by(cluster) %>% top_n(n = 20, wt = avg_log2FC)

# recluster

df72 <- ScaleData(df72, vars.to.regress = c('S.Score', 'G2M.Score'), features = top20$gene)
df72 <- FindVariableFeatures(df72, verbose = FALSE)
df72 <- RunPCA(df72, features = VariableFeatures(df72), nfeatures.print = 10)
df72 <- FindNeighbors(df72, dims = 1:10)
df72 <- RunUMAP(object = df72, dims = 1:30, n.neighbors=10)
df72 <- FindClusters(df72, resolution = 0.4)
